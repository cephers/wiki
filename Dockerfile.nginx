# Note: This comment was in the previous dockerfile
# Note: Not 100% sure why
#
# Small note, make sure to create upload/thumbs prior to running this! 

# builder container
FROM docker.io/debian:stretch-slim AS npm

# copy in wwwroot
COPY ./wwwroot /var/www

# install some packages
RUN set -exu \
  && DEBIAN_FRONTEND=noninteractive apt-get -yq update \
  && DEBIAN_FRONTEND=noninteractive apt-get -yq install \
    curl \
    apt-utils \
    git \
    libjpeg-dev \
    libpng-dev \
    libfreetype6-dev

# setup nodejs repo
RUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash -

RUN set -exu \
  && DEBIAN_FRONTEND=noninteractive apt-get -yq update \
  && DEBIAN_FRONTEND=noninteractive apt-get -yq install \
    nodejs
  
RUN set -exu \
  && DEBIAN_FRONTEND=noninteractive apt-get -yq clean

# run npm install
RUN set -exu \
  && npm install --silent --prefix /var/www/src


#
# runtime container
FROM docker.io/nginx:1.22.1-alpine

# copy populated wwwroot from build container
COPY --from=npm /var/www /var/www

RUN set -exu \
  && chown -R nginx:nginx /var/www

# taken from nginx dockerfile here
# https://github.com/nginxinc/docker-nginx/blob/fef51235521d1cdf8b05d8cb1378a526d2abf421/stable/alpine/Dockerfile
ENTRYPOINT ["/docker-entrypoint.sh"]
EXPOSE 80
STOPSIGNAL SIGQUIT
CMD ["nginx", "-g", "daemon off;"]
